[{"/Users/danielle/Desktop/React-Journal/client/src/index.js":"1","/Users/danielle/Desktop/React-Journal/client/src/App.js":"2","/Users/danielle/Desktop/React-Journal/client/src/reportWebVitals.js":"3","/Users/danielle/Desktop/React-Journal/client/src/Components/Navbar/Navbar.js":"4","/Users/danielle/Desktop/React-Journal/client/src/Components/Auth/Auth.js":"5","/Users/danielle/Desktop/React-Journal/client/src/Components/Auth/Login.js":"6","/Users/danielle/Desktop/React-Journal/client/src/Components/Auth/Signup.js":"7","/Users/danielle/Desktop/React-Journal/client/src/Components/Home/Post.js":"8","/Users/danielle/Desktop/React-Journal/client/src/Components/Home/Display.js":"9","/Users/danielle/Desktop/React-Journal/client/src/Components/Home/Home.js":"10","/Users/danielle/Desktop/React-Journal/client/src/Components/Profile/Profile.js":"11","/Users/danielle/Desktop/React-Journal/client/src/Components/Home/JournalGet.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":1031,"mtime":1612467106350,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":3303,"mtime":1612471664511,"results":"17","hashOfConfig":"14"},{"size":480,"mtime":1612467093580,"results":"18","hashOfConfig":"14"},{"size":1914,"mtime":1612467533301,"results":"19","hashOfConfig":"14"},{"size":2161,"mtime":1612467125809,"results":"20","hashOfConfig":"14"},{"size":1886,"mtime":1612554182730,"results":"21","hashOfConfig":"14"},{"size":8266,"mtime":1612377742589,"results":"22","hashOfConfig":"14"},{"size":309,"mtime":1612554223290,"results":"23","hashOfConfig":"14"},{"size":622,"mtime":1612869170524,"results":"24","hashOfConfig":"14"},{"size":1553,"mtime":1612538409191,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1oy54y4",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"/Users/danielle/Desktop/React-Journal/client/src/index.js",[],["53","54"],"/Users/danielle/Desktop/React-Journal/client/src/App.js",[],"/Users/danielle/Desktop/React-Journal/client/src/reportWebVitals.js",[],"/Users/danielle/Desktop/React-Journal/client/src/Components/Navbar/Navbar.js",[],"/Users/danielle/Desktop/React-Journal/client/src/Components/Auth/Auth.js",[],"/Users/danielle/Desktop/React-Journal/client/src/Components/Auth/Login.js",[],"/Users/danielle/Desktop/React-Journal/client/src/Components/Auth/Signup.js",[],"/Users/danielle/Desktop/React-Journal/client/src/Components/Home/Post.js",["55","56","57","58"],"/Users/danielle/Desktop/React-Journal/client/src/Components/Home/Display.js",["59"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst useStyles = makeStyles(() => ({\n\n  \n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\",\n    maxWidth: \"1200px\"\n\n  },\n  \n  root: {\n    minWidth: 275,\n    maxWidth: 275,\n    paddingTop: 0,\n    margin: \"10px\"\n  },\n\n  content: {\n    padding: 0,\n  },\n  \n  banner: {\n    marginBottom: \"10px\",\n    paddingBottom: \"4px\",\n    width: \"100%\",\n    backgroundColor: \"#0f3057\"\n  },\n\n  title: {\n    fontSize: 24,\n    fontWeight: \"500\",\n    color: \"white\"\n  },\n\n  journal: {\n    padding: \"3px 18px 0\",\n  },\n\n  // userInfo: {\n  //   marginBottom: 12,\n  // },\n\n  buttons:{\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n\n  button: {\n    width: \"100%\",\n    backgroundColor: '#00587a',\n    color: 'white',\n    fontWeight: 700,\n  },\n\n}));\n\nconst Post = (props) => {\n\n\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.wrapper}>\n      <Card className={classes.root}>\n        <CardContent className={classes.content}>\n          <Container className={classes.banner}>\n            <Typography className={classes.title} variant=\"h5\" component=\"h2\">\n              Journal Title\n        </Typography>\n          </Container>\n          <Typography className={classes.journal} variant=\"body2\" component=\"p\">\n            Isn't that fantastic? You can just push a little tree out of your brush like that. Isn't it fantastic that you can change your mind and create all these happy things? Mountains are so simple, they're hard.\n        </Typography>\n        {/* TERNARY TO DISPLAY BUTTONS OR USER NAME */}\n          {/* <Typography className={classes.userInfo} color=\"textSecondary\">\n            user name\n        </Typography> */}\n        </CardContent>\n        <CardActions >\n          <div className={classes.buttons}>\n          <IconButton aria-label=\"edit\">\n            <EditIcon />\n          </IconButton>\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n          </div>\n        </CardActions>\n      </Card>      \n\n{/* FILLLER CONTENT */}\n<Card className={classes.root}>\n        <CardContent className={classes.content}>\n          <Container className={classes.banner}>\n            <Typography className={classes.title} variant=\"h5\" component=\"h2\">\n              Journal Title\n        </Typography>\n          </Container>\n          <Typography className={classes.journal} variant=\"body2\" component=\"p\">\n            Isn't that fantastic? You can just push a little tree out of your brush like that. Isn't it fantastic that you can change your mind and create all these happy things? Mountains are so simple, they're hard.\n        </Typography>\n        {/* TERNARY TO DISPLAY BUTTONS OR USER NAME */}\n          {/* <Typography className={classes.userInfo} color=\"textSecondary\">\n            user name\n        </Typography> */}\n        </CardContent>\n        <CardActions >\n          <div className={classes.buttons}>\n          <IconButton aria-label=\"edit\">\n            <EditIcon />\n          </IconButton>\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n          </div>\n        </CardActions>\n      </Card>      <Card className={classes.root}>\n        <CardContent className={classes.content}>\n          <Container className={classes.banner}>\n            <Typography className={classes.title} variant=\"h5\" component=\"h2\">\n              Journal Title\n        </Typography>\n          </Container>\n          <Typography className={classes.journal} variant=\"body2\" component=\"p\">\n            Isn't that fantastic? You can just push a little tree out of your brush like that. Isn't it fantastic that you can change your mind and create all these happy things? Mountains are so simple, they're hard.\n        </Typography>\n        {/* TERNARY TO DISPLAY BUTTONS OR USER NAME */}\n          {/* <Typography className={classes.userInfo} color=\"textSecondary\">\n            user name\n        </Typography> */}\n        </CardContent>\n        <CardActions >\n          <div className={classes.buttons}>\n          <IconButton aria-label=\"edit\">\n            <EditIcon />\n          </IconButton>\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n          </div>\n        </CardActions>\n      </Card>      <Card className={classes.root}>\n        <CardContent className={classes.content}>\n          <Container className={classes.banner}>\n            <Typography className={classes.title} variant=\"h5\" component=\"h2\">\n              Journal Title\n        </Typography>\n          </Container>\n          <Typography className={classes.journal} variant=\"body2\" component=\"p\">\n            Isn't that fantastic? You can just push a little tree out of your brush like that. Isn't it fantastic that you can change your mind and create all these happy things? Mountains are so simple, they're hard.\n        </Typography>\n        {/* TERNARY TO DISPLAY BUTTONS OR USER NAME */}\n          {/* <Typography className={classes.userInfo} color=\"textSecondary\">\n            user name\n        </Typography> */}\n        </CardContent>\n        <CardActions >\n          <div className={classes.buttons}>\n          <IconButton aria-label=\"edit\">\n            <EditIcon />\n          </IconButton>\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n          </div>\n        </CardActions>\n      </Card>      \n\n      <Card className={classes.root}>\n        <CardContent className={classes.content}>\n          <Container className={classes.banner}>\n            <Typography className={classes.title} variant=\"h5\" component=\"h2\">\n              Journal Title\n        </Typography>\n          </Container>\n          <Typography className={classes.journal} variant=\"body2\" component=\"p\">\n            Isn't that fantastic? You can just push a little tree out of your brush like that. Isn't it fantastic that you can change your mind and create all these happy things? Mountains are so simple, they're hard.\n        </Typography>\n        {/* TERNARY TO DISPLAY BUTTONS OR USER NAME */}\n          {/* <Typography className={classes.userInfo} color=\"textSecondary\">\n            user name\n        </Typography> */}\n        </CardContent>\n        <CardActions >\n          <div className={classes.buttons}>\n          <IconButton aria-label=\"edit\">\n            <EditIcon />\n          </IconButton>\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n          </div>\n        </CardActions>\n      </Card>      <Card className={classes.root}>\n        <CardContent className={classes.content}>\n          <Container className={classes.banner}>\n            <Typography className={classes.title} variant=\"h5\" component=\"h2\">\n              Journal Title\n        </Typography>\n          </Container>\n          <Typography className={classes.journal} variant=\"body2\" component=\"p\">\n            Isn't that fantastic? You can just push a little tree out of your brush like that. Isn't it fantastic that you can change your mind and create all these happy things? Mountains are so simple, they're hard.\n        </Typography>\n        {/* TERNARY TO DISPLAY BUTTONS OR USER NAME */}\n          {/* <Typography className={classes.userInfo} color=\"textSecondary\">\n            user name\n        </Typography> */}\n        </CardContent>\n        <CardActions >\n          <div className={classes.buttons}>\n          <IconButton aria-label=\"edit\">\n            <EditIcon />\n          </IconButton>\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n          </div>\n        </CardActions>\n      </Card>      \n\n\n\n    </Container>\n  \n  \n  \n  )\n}\n\n\nexport default Post;","/Users/danielle/Desktop/React-Journal/client/src/Components/Home/Home.js",["60"],"/Users/danielle/Desktop/React-Journal/client/src/Components/Profile/Profile.js",["61"],"/Users/danielle/Desktop/React-Journal/client/src/Components/Home/JournalGet.js",["62"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(() => ({\n\n  wrapper: {\n    margin: \"50px auto 80px\",\n    display: \"flex\",\n    flexDirection : \"row\",\n    justifyContent: \"space-evenly\",\n  },\n  search: {\n    display: \"flex\",\n  },\n\n  searchButton: {\n    backgroundColor: '#00587a',\n    color: 'white',\n    fontWeight: 700,\n    marginTop: \"3px\",\n    marginLeft: \"5px\",\n    padding: \"5px\",\n    '&:hover': {\n      backgroundColor: '#008891',\n    }\n  },\n  \n  button: {\n    backgroundColor: '#00587a',\n    color: 'white',\n    width: \"150px\",\n    fontWeight: 700,\n    marginTop: \"3px\",\n    marginLeft: \"5px\",\n    '&:hover': {\n      backgroundColor: '#008891',\n    }\n  },\n\n  input: {\n    // marginTop: \"50px\",\n    width: \"100%\",\n  }\n\n}));\n\nconst Post = (props) => {\n\n  \n  const classes = useStyles();\n\n  return (\n    <Container className={classes.wrapper}>\n      <div className={classes.search}>\n      <TextField label=\"Search\" variant=\"outlined\" size=\"small\" defaultValue=\"Title Search\" className={classes.input} />\n      <IconButton type=\"submit\" className={classes.searchButton}><SearchIcon/></IconButton>\n      </div>\n      <Button className={classes.button}>Get All</Button>\n    </Container>\n  )\n}\n\n\nexport default Post;",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":40,"column":17,"nodeType":"69","messageId":"70","endLine":40,"endColumn":25},{"ruleId":"67","severity":1,"message":"71","line":41,"column":16,"nodeType":"69","messageId":"70","endLine":41,"endColumn":23},{"ruleId":"67","severity":1,"message":"72","line":42,"column":17,"nodeType":"69","messageId":"70","endLine":42,"endColumn":25},{"ruleId":"67","severity":1,"message":"73","line":44,"column":9,"nodeType":"69","messageId":"70","endLine":44,"endColumn":21},{"ruleId":"67","severity":1,"message":"74","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"74","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"74","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"67","severity":1,"message":"74","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'setTitle' is assigned a value but never used.","Identifier","unusedVar","'setDate' is assigned a value but never used.","'setEntry' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]